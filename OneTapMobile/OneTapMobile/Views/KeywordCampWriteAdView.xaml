<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="OneTapMobile.Views.KeywordCampWriteAdView"
             xmlns:Popups="clr-namespace:OneTapMobile.Popups" 
             xmlns:customcontrol="clr-namespace:OneTapMobile.CustomControl" 
             NavigationPage.HasNavigationBar="False"
             ios:Page.UseSafeArea="false"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" 
             xmlns:converter="clr-namespace:OneTapMobile.Converters" >
    <ContentPage.Background>
        <!--<LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
            <GradientStop Color="#FFF5DD"
                          Offset="0.0"/>
            <GradientStop Color="#FFE3A5"
                          Offset="1.0"/>
        </LinearGradientBrush>-->
        <LinearGradientBrush>
            <GradientStop Color="#FFFFFF"/>
            <GradientStop Color="#FFFFFF"/>
        </LinearGradientBrush>
    </ContentPage.Background>
    <!--Used Converters-->
    <ContentPage.Resources>
        <converter:MultiTriggerConverter x:Key="dataHasBeenEntered" />
    </ContentPage.Resources>

    <!--Page Views-->
    <ContentPage.Content>
        <Grid>
            <Grid  VerticalOptions="FillAndExpand" Margin="{Binding SafeAreaSpacing}" HorizontalOptions="FillAndExpand">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--Navigation Bar-->
                <Grid Grid.Row="0" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    <ImageButton Grid.Column="0" Grid.Row="0" Source="BackArrow" BackgroundColor="Transparent" VerticalOptions="CenterAndExpand" HorizontalOptions="StartAndExpand" HeightRequest="30" WidthRequest="30" Command="{Binding BackCommand}"/>
                    <ImageButton Grid.Column="2" Grid.Row="0" Source="HelpCircle" BackgroundColor="Transparent" VerticalOptions="CenterAndExpand" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" Command="{Binding HelpCommand}"/>
                </Grid>
                <StackLayout Grid.Row="1" VerticalOptions="Fill" HorizontalOptions="Start">
                    <customcontrol:GradientLabel  TextColor1="#6522A8"  TextColor2="#AC47ED"  FontSize="28" Text="Write your ad" HorizontalOptions="StartAndExpand" FontFamily="{StaticResource BoldFont}" Margin="10,0">
                        <customcontrol:GradientLabel.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean"
                            iOS="True"
                            Android="False"/>
                        </customcontrol:GradientLabel.IsVisible>
                    </customcontrol:GradientLabel>
                    <Label   TextColor="#862FC1" FontSize="28" Text="Write your ad" HorizontalOptions="StartAndExpand" FontFamily="{StaticResource BoldFont}" Margin="10,0" >
                        <Label.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean"
                            iOS="False"
                            Android="True"/>
                        </Label.IsVisible>
                    </Label>
                </StackLayout>
                <!--Campaign Form-->
                <ScrollView Grid.Row="2" Margin="10,10,10,0" HorizontalScrollBarVisibility="Never" VerticalScrollBarVisibility="Never">
                    <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" >
                        <!--Campaign Name-->
                        <StackLayout>
                            <StackLayout Orientation="Horizontal">
                                <Label Text="Headline 1" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                                <Label Text="Max. 30 characters" FontFamily="{StaticResource NormalFont}" TextColor="#000000" FontSize="12" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
                            </StackLayout>
                            <Frame Style="{StaticResource FrameStyle}" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Orientation="Horizontal" Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="Headline1Txt" MaxLength="30" Text="{Binding Headline1Txt}"  Placeholder="e.g. Ice Cream Shop Australia" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}" Completed="Heading1_Completed"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline1Txt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline1Txt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <StackLayout Orientation="Horizontal">
                                <Label Text="Headline 2" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                                <Label Text="Max. 30 characters" FontFamily="{StaticResource NormalFont}" TextColor="#000000" FontSize="12" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
                            </StackLayout>
                            <Frame Style="{StaticResource FrameStyle}" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Orientation="Horizontal" Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="Headline2Txt" MaxLength="30"  Text="{Binding Headline2Txt}"  Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}" Completed="Heading2_Completed"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline2Txt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline2Txt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <StackLayout Orientation="Horizontal">
                                <Label Text="Headline 3" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                                <Label Text="Max. 30 characters" FontFamily="{StaticResource NormalFont}" TextColor="#000000" FontSize="12" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
                            </StackLayout>
                            <Frame Style="{StaticResource FrameStyle}" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Orientation="Horizontal" Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="Headline3Txt" MaxLength="30" Text="{Binding Headline3Txt}"  Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}" Completed="Heading3_Completed"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline3Txt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline3Txt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <StackLayout Orientation="Horizontal">
                            <Label Text="Description 1" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                                <Label Text="Max. 90 characters" FontFamily="{StaticResource NormalFont}" TextColor="#000000" FontSize="12" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
                            </StackLayout>
                            <Frame Style="{StaticResource FrameStyle}" HeightRequest="125" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <customcontrol:CustomEditor x:Name="Desc1Txt" MaxLength="90" Text="{Binding Desc1Txt}"  Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" FontFamily="{StaticResource NormalFont}"/>
                                    <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Desc1Txt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Desc1Txt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <StackLayout Orientation="Horizontal">
                                <Label Text="Description 2" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                                <Label Text="Max. 90 characters" FontFamily="{StaticResource NormalFont}" TextColor="#000000" FontSize="12" HorizontalOptions="EndAndExpand" VerticalOptions="Center"/>
                            </StackLayout>
                            <Frame Style="{StaticResource FrameStyle}" HeightRequest="125" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <!--<Editor x:Name="Desc2Txt" MaxLength="90" Text="{Binding Desc2Txt}" Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" FontFamily="{StaticResource NormalFont}"/>-->
                                <customcontrol:CustomEditor x:Name="Desc2Txt" MaxLength="90" Text="{Binding Desc2Txt}"  Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" FontFamily="{StaticResource NormalFont}"/>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Desc2Txt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Desc2Txt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout HorizontalOptions="FillAndExpand" VerticalOptions="EndAndExpand">
                            <Frame Style="{StaticResource FrameStyle}" BackgroundColor="#BE7CE9" x:Name="Frame" IsEnabled="False" Opacity="0.8">
                                <Label Text="Continue"  HorizontalOptions="CenterAndExpand" HorizontalTextAlignment="Center" Opacity="0.5" TextColor="#FFFFFF" FontSize="16" FontFamily="{StaticResource SemiBoldFont}">
                                    <Label.Triggers>
                                        <MultiTrigger TargetType="Label">
                                            <MultiTrigger.Conditions>
                                                <BindingCondition Binding="{Binding Source={x:Reference Headline1Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                                <BindingCondition Binding="{Binding Source={x:Reference Headline2Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                                <BindingCondition Binding="{Binding Source={x:Reference Headline3Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                                <BindingCondition Binding="{Binding Source={x:Reference Desc1Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                                <BindingCondition Binding="{Binding Source={x:Reference Desc2Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Opacity" Value="1.0"/>
                                        </MultiTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding ContinueBtnCommand}"/>
                                </Frame.GestureRecognizers>
                                <Frame.Triggers>
                                    <MultiTrigger TargetType="Frame">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Source={x:Reference Headline1Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                            <BindingCondition Binding="{Binding Source={x:Reference Headline2Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                            <BindingCondition Binding="{Binding Source={x:Reference Headline3Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                            <BindingCondition Binding="{Binding Source={x:Reference Desc1Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                            <BindingCondition Binding="{Binding Source={x:Reference Desc2Txt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                        <Setter Property="BackgroundColor" Value="#AC47ED" />
                                        <Setter Property="Opacity" Value="1.0"/>
                                    </MultiTrigger>
                                </Frame.Triggers>
                            </Frame>
                             <Label Margin="0,10" Padding="0" Text="Regenerate Ad" TextDecorations="Underline" TextColor="#AC47ED" HorizontalOptions="Center" VerticalOptions="Center" VerticalTextAlignment="Center" HorizontalTextAlignment="Center">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GenerateAdCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                        </StackLayout>
                    </StackLayout>
                </ScrollView>
            </Grid>
            <!--Loader-->
            <Popups:LoaderView  IsVisible="{Binding IsBusy}" LoadderText="Please Wait.." HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"/>
        </Grid>
    </ContentPage.Content>
</ContentPage>