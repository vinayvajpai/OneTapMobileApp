<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:Popups="clr-namespace:OneTapMobile.Popups" 
             xmlns:customcontrol="clr-namespace:OneTapMobile.CustomControl" 
             NavigationPage.HasNavigationBar="False"
             ios:Page.UseSafeArea="false"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" 
             xmlns:converter="clr-namespace:OneTapMobile.Converters"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit" 
             x:Class="OneTapMobile.Views.AddCampaignDetailView">
    <ContentPage.Background>
        <!--<LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
            <GradientStop Color="#FFF5DD"
                          Offset="0.0"/>
            <GradientStop Color="#FFE3A5"
                          Offset="1.0"/>
        </LinearGradientBrush>-->
        <LinearGradientBrush>
            <GradientStop Color="#FFFFFF"/>
            <GradientStop Color="#FFFFFF"/>
        </LinearGradientBrush>
    </ContentPage.Background>
    <!--Used Converters-->
    <ContentPage.Resources>
        <converter:MultiTriggerConverter x:Key="dataHasBeenEntered" />
    </ContentPage.Resources>

    <!--Page Views-->
    <ContentPage.Content>
        <Grid>
            <Grid Margin="{Binding SafeAreaSpacing}" VerticalOptions="FillAndExpand"  HorizontalOptions="FillAndExpand">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!--Navigation Bar-->
                <Grid Grid.Row="0" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                    </Grid.RowDefinitions>
                    <ImageButton Grid.Column="0" Grid.Row="0" Source="BackArrow" BackgroundColor="Transparent" VerticalOptions="CenterAndExpand" HorizontalOptions="StartAndExpand" HeightRequest="30" WidthRequest="30" Command="{Binding BackCommand}"/>
                    <ImageButton Grid.Column="2" Grid.Row="0" Source="HelpCircle" BackgroundColor="Transparent" VerticalOptions="CenterAndExpand" HorizontalOptions="EndAndExpand" HeightRequest="30" WidthRequest="30" Command="{Binding HelpCommand}"/>
                </Grid>
                <StackLayout Grid.Row="1" VerticalOptions="Fill" HorizontalOptions="Start">
                    <customcontrol:GradientLabel  TextColor1="#6522A8"  TextColor2="#AC47ED"  FontSize="28" Text="Add Information" HorizontalOptions="StartAndExpand" FontFamily="{StaticResource BoldFont}" Margin="10,0">
                        <customcontrol:GradientLabel.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean"
                            iOS="True"
                            Android="False"/>
                        </customcontrol:GradientLabel.IsVisible>
                    </customcontrol:GradientLabel>
                    <Label   TextColor="#862FC1" FontSize="28" Text="Add Information" HorizontalOptions="StartAndExpand" FontFamily="{StaticResource BoldFont}" Margin="10,0" >
                        <Label.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean"
                            iOS="False"
                            Android="True"/>
                        </Label.IsVisible>
                    </Label>
                </StackLayout>
                <!--Campaign Form-->
                <ScrollView Grid.Row="2" Margin="10,10" VerticalScrollBarVisibility="Never">
                    <StackLayout>
                        <!--Campaign Name-->
                        <StackLayout>
                            <Label Text="Campaign Name" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14"/>
                            <Frame Style="{StaticResource FrameStyle}" Margin="5,0" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="CampNameTxt"  Text="{Binding CampNameTxt}"  Placeholder="e.g. Summer Sale" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference CampNameTxt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference CampNameTxt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout >
                            <Label Text="Primary Text" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14" />
                            <Frame  Margin="5,0" Style="{StaticResource FrameStyle}" HorizontalOptions="FillAndExpand" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5" VerticalOptions="FillAndExpand" Padding="10" HeightRequest="300">
                                <Editor x:Name="PrimaryTxt" Text="{Binding PrimaryTxt}" Placeholder="e.g. Ice cream shop in Sydney, Australia" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}" AutoSize="TextChanges"/>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference PrimaryTxt}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference PrimaryTxt}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <Label Text="Headline" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14"/>
                            <Frame  Margin="5,0" Style="{StaticResource FrameStyle}" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="Headline"  Text="{Binding Headline}"  Placeholder="e.g. Buy 1 Free 1..." TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference Headline}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>
                        <StackLayout>
                            <Label Text="Choose Call to Action" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14"/>
                           
                            <Frame  Margin="5,0" Style="{StaticResource FrameStyle}" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <customcontrol:CustomDropDown HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" x:Name="ButtonTitle" ItemsSource="{Binding ButtonTitle, Mode=TwoWay}"  FontFamily="{StaticResource NormalFont}" SelectedIndex="{Binding SelectedBtnTitle, Mode=TwoWay}"/>

                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference ButtonTitle}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference ButtonTitle}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                                <Frame.IsVisible>
                                    <OnPlatform x:TypeArguments="x:Boolean" iOS="False" Android="True"/>
                                </Frame.IsVisible>
                            </Frame>

                            <Frame  Margin="5,0" Style="{StaticResource FrameStyle}" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <Grid>
                                    <customcontrol:CustomDropDown HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" x:Name="SeButtonTitle" ItemsSource="{Binding ButtonTitle, Mode=TwoWay}"  FontFamily="{StaticResource NormalFont}" SelectedIndex="{Binding SelectedBtnTitle, Mode=TwoWay}" >
                                    </customcontrol:CustomDropDown>
                                    <ImageButton Source="DropDown" Clicked="DropdownSelected"  HorizontalOptions="EndAndExpand" VerticalOptions="CenterAndExpand" HeightRequest="15" WidthRequest="15" BackgroundColor="Transparent" Margin="0,0,15,0"/>
                                </Grid>

                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference SeButtonTitle}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference SeButtonTitle}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                                <Frame.IsVisible>
                                    <OnPlatform x:TypeArguments="x:Boolean" iOS="True" Android="False"/>
                                </Frame.IsVisible>
                            </Frame>

                        </StackLayout>
                        <StackLayout>
                            <Label Text="Your Website URL" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14"/>
                            <Frame  Margin="5,0" Style="{StaticResource FrameStyle}" xct:ShadowEffect.Color="#C6C6C6" xct:ShadowEffect.OffsetY="0" xct:ShadowEffect.OffsetX="0"  xct:ShadowEffect.Radius="5">
                                <StackLayout Orientation="Horizontal" Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                    <customcontrol:CustomEntry x:Name="WebURL"  Text="{Binding WebURL}"  TextChanged="WebURL_TextChanged" Placeholder="www.example.com" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Text" FontFamily="{StaticResource NormalFont}"/>
                                </StackLayout>
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference WebURL}, Path=IsFocused}" Value="false" >
                                        <Setter Property="BorderColor" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference WebURL}, Path=IsFocused}" Value="True" >
                                        <Setter Property="BorderColor" Value="#AC47ED"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                            </Frame>
                        </StackLayout>

                        <!--<StackLayout>
                            <Label Text="Link Instagram" FontFamily="{StaticResource SemiBoldFont}" TextColor="#1C1C1C" FontSize="14"/>
                            <Frame Style="{StaticResource FrameStyle}">
                                <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand" Spacing="15" VerticalOptions="CenterAndExpand">
                                    <Image Source="ProfilePic" HorizontalOptions="Start" VerticalOptions="CenterAndExpand"/>
                                    <Label Text="@Shubhansh_15"  Style="{StaticResource LabelStyle}" HorizontalOptions="StartAndExpand" TextColor="Black" FontFamily="{StaticResource SemiBoldFont}"/>
                                    <Image Source="GrayRightTick" IsVisible="{Binding InstaGrayTick}"/>
                                    <Image Source="RightTickGreen"  IsVisible="{Binding InstaGreenTick}"/>
                                </StackLayout>
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding AddInstagramAccCMd}"/>
                                </Frame.GestureRecognizers>
                            </Frame>
                        </StackLayout>-->
                    </StackLayout>
                </ScrollView>
                <StackLayout Grid.Row="3">
                    <Frame Style="{StaticResource FrameStyle}" BackgroundColor="#BE7CE9" x:Name="Frame" IsEnabled="False" Opacity="0.8">
                        <Label Text="Continue"  HorizontalOptions="CenterAndExpand" VerticalOptions="EndAndExpand" HorizontalTextAlignment="Center" Opacity="0.5" TextColor="#FFFFFF" FontSize="16" FontFamily="{StaticResource SemiBoldFont}">
                            <Label.Triggers>
                                <MultiTrigger TargetType="Label">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding Source={x:Reference CampNameTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                        <BindingCondition Binding="{Binding Source={x:Reference PrimaryTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                        <BindingCondition Binding="{Binding Source={x:Reference Headline}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                        <BindingCondition Binding="{Binding Source={x:Reference WebURL}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value="1.0"/>
                                </MultiTrigger>
                            </Label.Triggers>
                        </Label>
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ContinueBtnCommand}"/>
                        </Frame.GestureRecognizers>
                        <Frame.Triggers>
                            <MultiTrigger TargetType="Frame">
                                <MultiTrigger.Conditions>
                                    <BindingCondition Binding="{Binding Source={x:Reference CampNameTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                    <BindingCondition Binding="{Binding Source={x:Reference PrimaryTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                    <BindingCondition Binding="{Binding Source={x:Reference Headline}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                    <BindingCondition Binding="{Binding Source={x:Reference WebURL}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                                <Setter Property="BackgroundColor" Value="#AC47ED" />
                                <Setter Property="Opacity" Value="1.0"/>
                            </MultiTrigger>
                        </Frame.Triggers>
                    </Frame>
                     <Label Margin="0,10" Padding="0" Text="Regenerate Ad" TextDecorations="Underline" TextColor="#AC47ED" HorizontalOptions="Center" VerticalOptions="Center" VerticalTextAlignment="Center" HorizontalTextAlignment="Center">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GenerateAdCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                </StackLayout>
            </Grid>
            <!--Loader-->
            <Popups:LoaderView  IsVisible="{Binding IsBusy}" LoadderText="Please Wait.." HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"/>
        </Grid>
    </ContentPage.Content>
</ContentPage>