<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
             xmlns:customcontrol="clr-namespace:OneTapMobile.CustomControl"
             x:Class="OneTapMobile.Views.ForgotPasswordView"
             NavigationPage.HasNavigationBar="False"
             xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core" 
             xmlns:viewmodels="clr-namespace:OneTapMobile.ViewModels" 
             x:DataType="viewmodels:ForgotPasswordViewModel"
             ios:Page.UseSafeArea="False"
             xmlns:converter="clr-namespace:OneTapMobile.Converters" 
             xmlns:Popups="clr-namespace:OneTapMobile.Popups">
    <!--page background-->
    <ContentPage.Background>
        <!--<LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
            <GradientStop Color="#FFF5DD"
                          Offset="0.0"/>
            <GradientStop Color="#FFE3A5"
                          Offset="1.0"/>
        </LinearGradientBrush>-->
        <LinearGradientBrush>
            <GradientStop Color="#FFFFFF"/>
            <GradientStop Color="#FFFFFF"/>
        </LinearGradientBrush>
    </ContentPage.Background>
    <!--Used Converters-->
    <ContentPage.Resources>
        <converter:MultiTriggerConverter x:Key="dataHasBeenEntered" />
        <converter:EmailToBoolConverter x:Key="EmailTextChecked" />
        <converter:LengthConverter x:Key="TextLengthCounter"/>
    </ContentPage.Resources>
    <!--Page Views-->
    <ContentPage.Content>
        <Grid>
            <StackLayout Margin="{Binding SafeAreaSpacing}" VerticalOptions="FillAndExpand" Spacing="20">
                <!--Navigation bar-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="8*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ImageButton Grid.Column="0" Grid.Row="0" Source="BackArrow" BackgroundColor="Transparent" VerticalOptions="CenterAndExpand" HorizontalOptions="CenterAndExpand" HeightRequest="30" WidthRequest="30" Command="{Binding GoBackBtn}"/>
                    <Label Grid.Column="1" Grid.Row="0"  Text="Forgot Password" HorizontalOptions="CenterAndExpand" VerticalOptions="FillAndExpand" VerticalTextAlignment="Center" HorizontalTextAlignment="Center" TextColor="Black" FontSize="Medium" FontAttributes="Bold"/>
                </Grid>
                <StackLayout Margin="15,20" VerticalOptions="StartAndExpand" Spacing="20">
                    <Label Style="{StaticResource LabelStyle}" Text="Enter your email to receive a new password" TextColor="Black" FontFamily="{StaticResource NormalFont}"/>
                   <!--Email Entry Field-->
                    <Frame Style="{StaticResource FrameStyle}">
                        <StackLayout Orientation="Horizontal" Margin="-10,-15" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                            <customcontrol:CustomEntry x:Name="emailTxt" Text="{Binding Email}" Margin="5,-15" Placeholder="Email address" TextColor="Black" PlaceholderColor="Gray" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Keyboard="Email" FontFamily="{StaticResource NormalFont}"/>
                            <Image Source="InfoIcon.png" HeightRequest="20" WidthRequest="20" HorizontalOptions="End" VerticalOptions="Center" IsVisible="false" BackgroundColor="Transparent">
                                <Image.Triggers>
                                    <MultiTrigger TargetType="Image">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Source={x:Reference emailTxt}, Path=Text ,Converter={StaticResource EmailTextChecked}}" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible" Value="true"/>
                                    </MultiTrigger>
                                </Image.Triggers>
                            </Image>
                        </StackLayout>
                        <Frame.Triggers>
                            <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference emailTxt}, Path=IsFocused}" Value="false" >
                                <Setter Property="BorderColor" Value="#AC47ED"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Frame"  Binding="{Binding Source={x:Reference emailTxt}, Path=IsFocused}" Value="True" >
                                <Setter Property="BorderColor" Value="#AC47ED"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Frame" Binding="{Binding Source={x:Reference emailTxt}, Path=Text ,Converter={StaticResource EmailTextChecked}}" Value="false" >
                                <Setter Property="BorderColor" Value="#F55937"/>
                            </DataTrigger>
                        </Frame.Triggers>
                    </Frame>
                    <!--Submit Button-->
                    <Frame Style="{StaticResource FrameStyle}" IsEnabled="False" BackgroundColor="#BE7CE9">
                        <Label Text="Submit" Opacity="0.5"  HorizontalOptions="CenterAndExpand" HorizontalTextAlignment="Center" TextColor="White" FontSize="16" FontFamily="{StaticResource SemiBoldFont}">
                            <Label.Triggers>
                                <MultiTrigger TargetType="Label">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding Source={x:Reference emailTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Opacity" Value="1.0" />
                                </MultiTrigger>
                            </Label.Triggers>
                        </Label>
                        <Frame.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding SubmitCmd, Mode=TwoWay}"/>
                        </Frame.GestureRecognizers>
                        <Frame.Triggers>
                            <MultiTrigger TargetType="Frame">
                                <MultiTrigger.Conditions>
                                    <BindingCondition Binding="{Binding Source={x:Reference emailTxt}, Path=Text.Length,Converter={StaticResource dataHasBeenEntered}}" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                                <Setter Property="BackgroundColor" Value="#AC47ED" />
                            </MultiTrigger>
                        </Frame.Triggers>
                    </Frame>
                </StackLayout>
            </StackLayout>
            <!--Loader-->
            <Popups:LoaderView IsVisible="{Binding IsBusy}" Grid.Row="0" LoadderText="{Binding LoaderText}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand"/>
        </Grid>
    </ContentPage.Content>
</ContentPage>